
services:
  kafka:
    image: confluentinc/confluent-local:latest
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_KRAFT_MODE: "true"
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,CONTROLLER://kafka:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_LOG_DIRS: /var/lib/kafka/data
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    volumes:
      - kafka-data:/var/lib/kafka/data
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  crawler_service:
    build:
      context: ./services/crawler_service
    volumes:
      - ./services/crawler_service/app.py:/app/app.py
      - ./services/crawler_service/rss_sources.json:/app/rss_sources.json
      - ./shared:/app/shared
    environment:
      REDIS_HOST: redis
    depends_on:
      - redis
    restart: "no"

  filter_service:
    build:
      context: ./services/filter_service
    volumes:
      - ./services/filter_service/app.py:/app/app.py
      - ./shared:/app/shared
      - ./models/model_news_filter.bin:/app/models/model_news_filter.bin
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    restart: "no"

  extractor_service:
    build:
      context: ./services/extractor_service
    volumes:
      - ./services/extractor_service/app.py:/app/app.py
      - ./shared:/app/shared
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CONSUMER_GROUP: extractor_group
    depends_on:
      kafka:
        condition: service_healthy
    restart: "no"

volumes:
  kafka-data:
    name: kafka-data
